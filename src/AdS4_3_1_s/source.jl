# no source
Base.@kwdef mutable struct NoSource{T} <: Source
	time :: T = 0.0
	
end

Sz(t, x, y, ::NoSource) = 1.0
Sz_x(t, x, y, ::NoSource) = 0.0
Sz_y(t, x, y, ::NoSource) = 0.0

Sz_xx(t, x, y, ::NoSource) = 0.0
Sz_yy(t, x, y, ::NoSource) = 0.0
Sz_xxx(t, x, y, ::NoSource) = 0.0
Sz_yyy(t, x, y, ::NoSource) = 0.0
Sz_xxxx(t, x, y, ::NoSource) = 0.0
Sz_yyyy(t, x, y, ::NoSource) = 0.0
Sz_xy(t, x, y, ::NoSource) = 0.0
Sz_xxy(t, x, y, ::NoSource) = 0.0
Sz_xyy(t, x, y, ::NoSource) = 0.0
Sz_xxyy(t, x, y, ::NoSource) = 0.0

Sz_t(t, x, y, ::NoSource) = 0.0
Sz_tx(t, x, y, ::NoSource) = 0.0
Sz_txx(t, x, y, ::NoSource) = 0.0
Sz_ty(t, x, y, ::NoSource) = 0.0
Sz_tyy(t, x, y, ::NoSource) = 0.0
Sz_txy(t, x, y, ::NoSource) = 0.0

Sz_tt(t, x, y, ::NoSource) = 0.0



#Test constant source
Base.@kwdef mutable struct SpatialConstantSource{T} <: Source
	time :: T = 0.0
	Amp :: T = 0.01
	t0 :: T = 10.0
	tau :: T = 1.0
end

Sz(t, x, y, GS ::SpatialConstantSource) = 1/sqrt(1 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))
Sz_x(t, x, y, GS ::SpatialConstantSource) = 0
Sz_xx(t, x, y, GS ::SpatialConstantSource) = 0
Sz_xxx(t, x, y, GS ::SpatialConstantSource) = 0
Sz_xxxx(t, x, y, GS ::SpatialConstantSource) = 0
Sz_y(t, x, y, GS ::SpatialConstantSource) = 0
Sz_xy(t, x, y, GS ::SpatialConstantSource) = 0
Sz_xxy(t, x, y, GS ::SpatialConstantSource) = 0
Sz_xyy(t, x, y, GS ::SpatialConstantSource) = 0
Sz_xxyy(t, x, y, GS ::SpatialConstantSource) = 0
Sz_yy(t, x, y, GS ::SpatialConstantSource) = 0
Sz_yyy(t, x, y, GS ::SpatialConstantSource) = 0
Sz_yyyy(t, x, y, GS ::SpatialConstantSource) = 0
Sz_t(t, x, y, GS ::SpatialConstantSource) = -0.5*(GS.Amp*sech((t - GS.t0)/GS.tau)^2)/(GS.tau*(1 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^1.5)
Sz_tt(t, x, y, GS ::SpatialConstantSource) = (GS.Amp*sech((t - GS.t0)/GS.tau)^2*(3*GS.Amp*sech((t - GS.t0)/GS.tau)^2 + 4*tanh((t - GS.t0)/GS.tau)*(1 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))))/(4*GS.tau^2*(1 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2.5)
Sz_tx(t, x, y, GS ::SpatialConstantSource) = 0
Sz_ty(t, x, y, GS ::SpatialConstantSource) = 0
Sz_txx(t, x, y, GS ::SpatialConstantSource) = 0
Sz_tyy(t, x, y, GS ::SpatialConstantSource) = 0
Sz_txy(t, x, y, GS ::SpatialConstantSource) = 0


#Gaussian source
Base.@kwdef mutable struct ExpSource{T} <: Source
	time :: T = 0.0
	Amp :: T = 0.01
	x0 :: T = 0.0
	y0 :: T = 0.0
	sigmax :: T = 0.5
	sigmay :: T = 0.5
	t0 :: T = 10.0
	L :: T = 100.0
	tau :: T = 1.0
end

Sz(t, x, y, GS ::ExpSource) = 1/sqrt(1 + (MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))/(4*pi^2*GS.sigmax^2))

Sz_x(t, x, y, GS ::ExpSource) = (MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*GS.Amp*((2*pi*x)/GS.L - GS.x0)*(1 + tanh((t - GS.t0)/GS.tau)))/(4*pi*GS.L*GS.sigmax^4*(1 + (MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))/(4*pi^2*GS.sigmax^2))^1.5)

Sz_xx(t, x, y, GS ::ExpSource) = (2*pi^3*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))*(-8*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*(4*pi^2*x^2 - 4*pi*x*GS.L*GS.x0 + GS.L^2*(-GS.sigmax^2 + GS.x0^2)) + GS.Amp*(4*pi^2*x^2 - 4*pi*x*GS.L*GS.x0 + GS.L^2*(2*GS.sigmax^2 + GS.x0^2))*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.L^4*GS.sigmax^4*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2*sqrt((MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/GS.sigmax^2))
Sz_xxx(t, x, y, GS ::ExpSource) = (2*pi^4*GS.Amp*(2*pi*x - GS.L*GS.x0)*(1 + tanh((t - GS.t0)/GS.tau))*(64*MathConstants.e^(((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)*pi^4*GS.sigmax^4*(4*pi^2*x^2 - 4*pi*x*GS.L*GS.x0 + GS.L^2*(-3*GS.sigmax^2 + GS.x0^2)) + GS.Amp^2*(4*pi^2*x^2 - 4*pi*x*GS.L*GS.x0 + GS.L^2*(6*GS.sigmax^2 + GS.x0^2))*sech((t - GS.t0)/GS.tau)^2*(cosh((2*(t - GS.t0))/GS.tau) + sinh((2*(t - GS.t0))/GS.tau)) - 8*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.Amp*GS.sigmax^2*(20*pi^2*x^2 - 20*pi*x*GS.L*GS.x0 + GS.L^2*(3*GS.sigmax^2 + 5*GS.x0^2))*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.L^6*GS.sigmax^6*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3*sqrt((MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/GS.sigmax^2))
Sz_xxxx(t, x, y, GS ::ExpSource) = (2*MathConstants.e^((-2*((-2*pi*x)/GS.L + GS.x0)^2)/GS.sigmax^2 - (2*((-2*pi*y)/GS.L + GS.y0)^2)/GS.sigmay^2)*pi^5*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))*(105*GS.Amp^3*((-2*pi*x)/GS.L + GS.x0)^4*(1 + tanh((t - GS.t0)/GS.tau))^3 + (180*GS.Amp^2*GS.sigmax^2*(-2*pi*x + GS.L*GS.x0)^2*(1 + tanh((t - GS.t0)/GS.tau))^2*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/GS.L^2 - (180*GS.Amp^2*(-2*pi*x + GS.L*GS.x0)^4*(1 + tanh((t - GS.t0)/GS.tau))^2*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/GS.L^4 + 36*GS.Amp*GS.sigmax^4*(1 + tanh((t - GS.t0)/GS.tau))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2 - (216*GS.Amp*GS.sigmax^2*(-2*pi*x + GS.L*GS.x0)^2*(1 + tanh((t - GS.t0)/GS.tau))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2)/GS.L^2 + (84*GS.Amp*(-2*pi*x + GS.L*GS.x0)^4*(1 + tanh((t - GS.t0)/GS.tau))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2)/GS.L^4 - 24*GS.sigmax^4*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3 + (48*GS.sigmax^2*(-2*pi*x + GS.L*GS.x0)^2*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3)/GS.L^2 - (8*(-2*pi*x + GS.L*GS.x0)^4*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3)/GS.L^4))/(GS.L^4*GS.sigmax^16*((MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/GS.sigmax^2)^4.5)

Sz_y(t, x, y, GS ::ExpSource) = (MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*GS.Amp*((2*pi*y)/GS.L - GS.y0)*(1 + tanh((t - GS.t0)/GS.tau)))/(4*pi*GS.L*GS.sigmax^2*GS.sigmay^2*(1 + (MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))/(4*pi^2*GS.sigmax^2))^1.5)

Sz_xy(t, x, y, GS ::ExpSource) = (-2*pi^3*GS.Amp*(2*pi*x - GS.L*GS.x0)*(2*pi*y - GS.L*GS.y0)*(1 + tanh((t - GS.t0)/GS.tau))*(8*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 - GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.L^4*GS.sigmax^2*GS.sigmay^2*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2*sqrt((MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/GS.sigmax^2))
Sz_xxy(t, x, y, GS ::ExpSource) = (2*pi^4*GS.Amp*(2*pi*y - GS.L*GS.y0)*(1 + tanh((t - GS.t0)/GS.tau))*(64*MathConstants.e^(((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)*pi^4*GS.sigmax^4*(4*pi^2*x^2 - 4*pi*x*GS.L*GS.x0 + GS.L^2*(-GS.sigmax^2 + GS.x0^2)) + GS.Amp^2*(4*pi^2*x^2 - 4*pi*x*GS.L*GS.x0 + GS.L^2*(2*GS.sigmax^2 + GS.x0^2))*sech((t - GS.t0)/GS.tau)^2*(cosh((2*(t - GS.t0))/GS.tau) + sinh((2*(t - GS.t0))/GS.tau)) - 8*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.Amp*GS.sigmax^2*(20*pi^2*x^2 - 20*pi*x*GS.L*GS.x0 + GS.L^2*(GS.sigmax^2 + 5*GS.x0^2))*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.L^6*GS.sigmax^4*GS.sigmay^2*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3*sqrt((MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/GS.sigmax^2))
Sz_xyy(t, x, y, GS ::ExpSource) = (2*pi^4*GS.Amp*(2*pi*x - GS.L*GS.x0)*(1 + tanh((t - GS.t0)/GS.tau))*(64*MathConstants.e^(((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)*pi^4*GS.sigmax^4*(4*pi^2*y^2 - 4*pi*y*GS.L*GS.y0 + GS.L^2*(-GS.sigmay^2 + GS.y0^2)) + GS.Amp^2*(4*pi^2*y^2 - 4*pi*y*GS.L*GS.y0 + GS.L^2*(2*GS.sigmay^2 + GS.y0^2))*sech((t - GS.t0)/GS.tau)^2*(cosh((2*(t - GS.t0))/GS.tau) + sinh((2*(t - GS.t0))/GS.tau)) - 8*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.Amp*GS.sigmax^2*(20*pi^2*y^2 - 20*pi*y*GS.L*GS.y0 + GS.L^2*(GS.sigmay^2 + 5*GS.y0^2))*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.L^6*GS.sigmax^2*GS.sigmay^4*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3*sqrt((MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/GS.sigmax^2))
Sz_xxyy(t, x, y, GS ::ExpSource) = (2*MathConstants.e^((-2*((-2*pi*x)/GS.L + GS.x0)^2)/GS.sigmax^2 - (2*((-2*pi*y)/GS.L + GS.y0)^2)/GS.sigmay^2)*pi^5*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))*(105*GS.Amp^3*(-2*pi*x + GS.L*GS.x0)^2*(-2*pi*y + GS.L*GS.y0)^2*(1 + tanh((t - GS.t0)/GS.tau))^3 + 30*GS.Amp^2*GS.L^2*GS.sigmay^2*(-2*pi*x + GS.L*GS.x0)^2*(1 + tanh((t - GS.t0)/GS.tau))^2*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))) + 30*GS.Amp^2*GS.L^2*GS.sigmax^2*(-2*pi*y + GS.L*GS.y0)^2*(1 + tanh((t - GS.t0)/GS.tau))^2*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))) - 180*GS.Amp^2*(-2*pi*x + GS.L*GS.x0)^2*(-2*pi*y + GS.L*GS.y0)^2*(1 + tanh((t - GS.t0)/GS.tau))^2*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))) + 12*GS.Amp*GS.L^4*GS.sigmax^2*GS.sigmay^2*(1 + tanh((t - GS.t0)/GS.tau))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2 - 36*GS.Amp*GS.L^2*GS.sigmay^2*(-2*pi*x + GS.L*GS.x0)^2*(1 + tanh((t - GS.t0)/GS.tau))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2 - 36*GS.Amp*GS.L^2*GS.sigmax^2*(-2*pi*y + GS.L*GS.y0)^2*(1 + tanh((t - GS.t0)/GS.tau))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2 + 84*GS.Amp*(-2*pi*x + GS.L*GS.x0)^2*(-2*pi*y + GS.L*GS.y0)^2*(1 + tanh((t - GS.t0)/GS.tau))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2 - 8*GS.L^4*GS.sigmax^2*GS.sigmay^2*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3 + 8*GS.L^2*GS.sigmay^2*(-2*pi*x + GS.L*GS.x0)^2*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3 + 8*GS.L^2*GS.sigmax^2*(-2*pi*y + GS.L*GS.y0)^2*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3 - 8*(-2*pi*x + GS.L*GS.x0)^2*(-2*pi*y + GS.L*GS.y0)^2*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3))/(GS.L^8*GS.sigmax^12*GS.sigmay^4*((MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/GS.sigmax^2)^4.5)
Sz_yy(t, x, y, GS ::ExpSource) = (-2*pi^3*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))*(8*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*(4*pi^2*y^2 - 4*pi*y*GS.L*GS.y0 + GS.L^2*(-GS.sigmay^2 + GS.y0^2)) - GS.Amp*(4*pi^2*y^2 - 4*pi*y*GS.L*GS.y0 + GS.L^2*(2*GS.sigmay^2 + GS.y0^2))*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.L^4*GS.sigmay^4*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2*sqrt((MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/GS.sigmax^2))
Sz_yyy(t, x, y, GS ::ExpSource) = (2*pi^4*GS.Amp*(2*pi*y - GS.L*GS.y0)*(1 + tanh((t - GS.t0)/GS.tau))*(64*MathConstants.e^(((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)*pi^4*GS.sigmax^4*(4*pi^2*y^2 - 4*pi*y*GS.L*GS.y0 + GS.L^2*(-3*GS.sigmay^2 + GS.y0^2)) + GS.Amp^2*(4*pi^2*y^2 - 4*pi*y*GS.L*GS.y0 + GS.L^2*(6*GS.sigmay^2 + GS.y0^2))*sech((t - GS.t0)/GS.tau)^2*(cosh((2*(t - GS.t0))/GS.tau) + sinh((2*(t - GS.t0))/GS.tau)) - 8*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.Amp*GS.sigmax^2*(20*pi^2*y^2 - 20*pi*y*GS.L*GS.y0 + GS.L^2*(3*GS.sigmay^2 + 5*GS.y0^2))*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.L^6*GS.sigmay^6*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3*sqrt((MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/GS.sigmax^2))
Sz_yyyy(t, x, y, GS ::ExpSource) = (2*MathConstants.e^((-2*((-2*pi*x)/GS.L + GS.x0)^2)/GS.sigmax^2 - (2*((-2*pi*y)/GS.L + GS.y0)^2)/GS.sigmay^2)*pi^5*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))*(105*GS.Amp^3*((-2*pi*y)/GS.L + GS.y0)^4*(1 + tanh((t - GS.t0)/GS.tau))^3 + (180*GS.Amp^2*GS.sigmay^2*(-2*pi*y + GS.L*GS.y0)^2*(1 + tanh((t - GS.t0)/GS.tau))^2*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/GS.L^2 - (180*GS.Amp^2*(-2*pi*y + GS.L*GS.y0)^4*(1 + tanh((t - GS.t0)/GS.tau))^2*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/GS.L^4 + 36*GS.Amp*GS.sigmay^4*(1 + tanh((t - GS.t0)/GS.tau))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2 - (216*GS.Amp*GS.sigmay^2*(-2*pi*y + GS.L*GS.y0)^2*(1 + tanh((t - GS.t0)/GS.tau))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2)/GS.L^2 + (84*GS.Amp*(-2*pi*y + GS.L*GS.y0)^4*(1 + tanh((t - GS.t0)/GS.tau))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2)/GS.L^4 - 24*GS.sigmay^4*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3 + (48*GS.sigmay^2*(-2*pi*y + GS.L*GS.y0)^2*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3)/GS.L^2 - (8*(-2*pi*y + GS.L*GS.y0)^4*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3)/GS.L^4))/(GS.L^4*GS.sigmax^8*GS.sigmay^8*((MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/GS.sigmax^2)^4.5)
Sz_t(t, x, y, GS ::ExpSource) = -0.125*(MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*GS.Amp*sech((t - GS.t0)/GS.tau)^2)/(pi^2*GS.sigmax^2*GS.tau*(1 + (MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))/(4*pi^2*GS.sigmax^2))^1.5)
Sz_tt(t, x, y, GS ::ExpSource) = (pi*GS.Amp*sech((t - GS.t0)/GS.tau)^2*(16*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*tanh((t - GS.t0)/GS.tau) + GS.Amp*(3*sech((t - GS.t0)/GS.tau)^2 + 4*tanh((t - GS.t0)/GS.tau)*(1 + tanh((t - GS.t0)/GS.tau)))))/(2*GS.tau^2*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2*sqrt((MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/GS.sigmax^2))
Sz_tx(t, x, y, GS ::ExpSource) = (pi^2*GS.Amp*(2*pi*x - GS.L*GS.x0)*sech((t - GS.t0)/GS.tau)^2*(8*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 - GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.L^2*GS.sigmax^2*GS.tau*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2*sqrt((MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/GS.sigmax^2))
Sz_ty(t, x, y, GS ::ExpSource) = (pi^2*GS.Amp*(2*pi*y - GS.L*GS.y0)*sech((t - GS.t0)/GS.tau)^2*(8*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 - GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.L^2*GS.sigmay^2*GS.tau*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2*sqrt((MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/GS.sigmax^2))
Sz_txx(t, x, y, GS ::ExpSource) = -((pi^3*GS.Amp*sech((t - GS.t0)/GS.tau)^2*(64*MathConstants.e^(((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)*pi^4*GS.sigmax^4*(4*pi^2*x^2 - 4*pi*x*GS.L*GS.x0 + GS.L^2*(-GS.sigmax^2 + GS.x0^2)) + GS.Amp^2*(4*pi^2*x^2 - 4*pi*x*GS.L*GS.x0 + GS.L^2*(2*GS.sigmax^2 + GS.x0^2))*sech((t - GS.t0)/GS.tau)^2*(cosh((2*(t - GS.t0))/GS.tau) + sinh((2*(t - GS.t0))/GS.tau)) - 8*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.Amp*GS.sigmax^2*(20*pi^2*x^2 - 20*pi*x*GS.L*GS.x0 + GS.L^2*(GS.sigmax^2 + 5*GS.x0^2))*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.L^4*GS.sigmax^4*GS.tau*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3*sqrt((MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/GS.sigmax^2)))
Sz_tyy(t, x, y, GS ::ExpSource) = -((pi^3*GS.Amp*sech((t - GS.t0)/GS.tau)^2*(64*MathConstants.e^(((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)*pi^4*GS.sigmax^4*(4*pi^2*y^2 - 4*pi*y*GS.L*GS.y0 + GS.L^2*(-GS.sigmay^2 + GS.y0^2)) + GS.Amp^2*(4*pi^2*y^2 - 4*pi*y*GS.L*GS.y0 + GS.L^2*(2*GS.sigmay^2 + GS.y0^2))*sech((t - GS.t0)/GS.tau)^2*(cosh((2*(t - GS.t0))/GS.tau) + sinh((2*(t - GS.t0))/GS.tau)) - 8*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.Amp*GS.sigmax^2*(20*pi^2*y^2 - 20*pi*y*GS.L*GS.y0 + GS.L^2*(GS.sigmay^2 + 5*GS.y0^2))*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.L^4*GS.sigmay^4*GS.tau*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3*sqrt((MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/GS.sigmax^2)))
Sz_txy(t, x, y, GS ::ExpSource) = -((pi^3*GS.Amp*(2*pi*x - GS.L*GS.x0)*(2*pi*y - GS.L*GS.y0)*sech((t - GS.t0)/GS.tau)^2*(64*MathConstants.e^(((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)*pi^4*GS.sigmax^4 - 40*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.Amp*GS.sigmax^2*(1 + tanh((t - GS.t0)/GS.tau)) + GS.Amp^2*(1 + tanh((t - GS.t0)/GS.tau))^2))/(GS.L^4*GS.sigmax^2*GS.sigmay^2*GS.tau*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3*sqrt((MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/GS.sigmax^2)))


#Gaussian source
Base.@kwdef mutable struct GaussianSource{T} <: Source
	time :: T = 0.0
	Amp :: T = 0.01
	x0 :: T = 0.0
	y0 :: T = 0.0
	sigmax :: T = 0.5
	sigmay :: T = 0.5
	t0 :: T = 10.0
	L :: T = 100.0
	tau :: T = 1.0
end

Sz(t, x, y, GS ::GaussianSource) = 1/sqrt(1 + (MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))/(4*pi^2*GS.sigmax^2*GS.sigmay^2))
Sz_x(t, x, y, GS ::GaussianSource) = (MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*GS.Amp*((2*pi*x)/GS.L - GS.x0)*(1 + tanh((t - GS.t0)/GS.tau)))/(4*pi*GS.L*GS.sigmax^4*GS.sigmay^2*(1 + (MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))/(4*pi^2*GS.sigmax^2*GS.sigmay^2))^1.5)

Sz_xx(t, x, y, GS ::GaussianSource) = (2*pi^3*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))*(-8*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2*(4*pi^2*x^2 - 4*pi*x*GS.L*GS.x0 + GS.L^2*(-GS.sigmax^2 + GS.x0^2)) + GS.Amp*(4*pi^2*x^2 - 4*pi*x*GS.L*GS.x0 + GS.L^2*(2*GS.sigmax^2 + GS.x0^2))*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.L^4*GS.sigmax^4*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2*sqrt((MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.sigmax^2*GS.sigmay^2)))
Sz_xxx(t, x, y, GS ::GaussianSource) = (2*pi^4*GS.Amp*(2*pi*x - GS.L*GS.x0)*(1 + tanh((t - GS.t0)/GS.tau))*(64*MathConstants.e^(((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)*pi^4*GS.sigmax^4*GS.sigmay^4*(4*pi^2*x^2 - 4*pi*x*GS.L*GS.x0 + GS.L^2*(-3*GS.sigmax^2 + GS.x0^2)) + GS.Amp^2*(4*pi^2*x^2 - 4*pi*x*GS.L*GS.x0 + GS.L^2*(6*GS.sigmax^2 + GS.x0^2))*sech((t - GS.t0)/GS.tau)^2*(cosh((2*(t - GS.t0))/GS.tau) + sinh((2*(t - GS.t0))/GS.tau)) - 8*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.Amp*GS.sigmax^2*GS.sigmay^2*(20*pi^2*x^2 - 20*pi*x*GS.L*GS.x0 + GS.L^2*(3*GS.sigmax^2 + 5*GS.x0^2))*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.L^6*GS.sigmax^6*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3*sqrt((MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.sigmax^2*GS.sigmay^2)))
Sz_xxxx(t, x, y, GS ::GaussianSource) = (2*MathConstants.e^((-2*((-2*pi*x)/GS.L + GS.x0)^2)/GS.sigmax^2 - (2*((-2*pi*y)/GS.L + GS.y0)^2)/GS.sigmay^2)*pi^5*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))*(105*GS.Amp^3*((-2*pi*x)/GS.L + GS.x0)^4*(1 + tanh((t - GS.t0)/GS.tau))^3 + (180*GS.Amp^2*GS.sigmax^2*(-2*pi*x + GS.L*GS.x0)^2*(1 + tanh((t - GS.t0)/GS.tau))^2*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/GS.L^2 - (180*GS.Amp^2*(-2*pi*x + GS.L*GS.x0)^4*(1 + tanh((t - GS.t0)/GS.tau))^2*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/GS.L^4 + 36*GS.Amp*GS.sigmax^4*(1 + tanh((t - GS.t0)/GS.tau))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2 - (216*GS.Amp*GS.sigmax^2*(-2*pi*x + GS.L*GS.x0)^2*(1 + tanh((t - GS.t0)/GS.tau))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2)/GS.L^2 + (84*GS.Amp*(-2*pi*x + GS.L*GS.x0)^4*(1 + tanh((t - GS.t0)/GS.tau))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2)/GS.L^4 - 24*GS.sigmax^4*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3 + (48*GS.sigmax^2*(-2*pi*x + GS.L*GS.x0)^2*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3)/GS.L^2 - (8*(-2*pi*x + GS.L*GS.x0)^4*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3)/GS.L^4))/(GS.L^4*GS.sigmax^16*GS.sigmay^8*((MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.sigmax^2*GS.sigmay^2))^4.5)
Sz_y(t, x, y, GS ::GaussianSource) = (MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*GS.Amp*((2*pi*y)/GS.L - GS.y0)*(1 + tanh((t - GS.t0)/GS.tau)))/(4*pi*GS.L*GS.sigmax^2*GS.sigmay^4*(1 + (MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))/(4*pi^2*GS.sigmax^2*GS.sigmay^2))^1.5)

Sz_xy(t, x, y, GS ::GaussianSource) = (-2*pi^3*GS.Amp*(2*pi*x - GS.L*GS.x0)*(2*pi*y - GS.L*GS.y0)*(1 + tanh((t - GS.t0)/GS.tau))*(8*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 - GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.L^4*sqrt((MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.sigmax^2*GS.sigmay^2))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^3*GS.sigmay^3 + GS.Amp*GS.sigmax*GS.sigmay*(1 + tanh((t - GS.t0)/GS.tau)))^2)
Sz_xxy(t, x, y, GS ::GaussianSource) = (2*pi^4*GS.Amp*(2*pi*y - GS.L*GS.y0)*(1 + tanh((t - GS.t0)/GS.tau))*(64*MathConstants.e^(((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)*pi^4*GS.sigmax^4*GS.sigmay^4*(4*pi^2*x^2 - 4*pi*x*GS.L*GS.x0 + GS.L^2*(-GS.sigmax^2 + GS.x0^2)) + GS.Amp^2*(4*pi^2*x^2 - 4*pi*x*GS.L*GS.x0 + GS.L^2*(2*GS.sigmax^2 + GS.x0^2))*sech((t - GS.t0)/GS.tau)^2*(cosh((2*(t - GS.t0))/GS.tau) + sinh((2*(t - GS.t0))/GS.tau)) - 8*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.Amp*GS.sigmax^2*GS.sigmay^2*(20*pi^2*x^2 - 20*pi*x*GS.L*GS.x0 + GS.L^2*(GS.sigmax^2 + 5*GS.x0^2))*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.L^6*GS.sigmax^4*GS.sigmay^2*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3*sqrt((MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.sigmax^2*GS.sigmay^2)))
Sz_xyy(t, x, y, GS ::GaussianSource) = (2*pi^4*GS.Amp*(2*pi*x - GS.L*GS.x0)*(1 + tanh((t - GS.t0)/GS.tau))*(64*MathConstants.e^(((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)*pi^4*GS.sigmax^4*GS.sigmay^4*(4*pi^2*y^2 - 4*pi*y*GS.L*GS.y0 + GS.L^2*(-GS.sigmay^2 + GS.y0^2)) + GS.Amp^2*(4*pi^2*y^2 - 4*pi*y*GS.L*GS.y0 + GS.L^2*(2*GS.sigmay^2 + GS.y0^2))*sech((t - GS.t0)/GS.tau)^2*(cosh((2*(t - GS.t0))/GS.tau) + sinh((2*(t - GS.t0))/GS.tau)) - 8*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.Amp*GS.sigmax^2*GS.sigmay^2*(20*pi^2*y^2 - 20*pi*y*GS.L*GS.y0 + GS.L^2*(GS.sigmay^2 + 5*GS.y0^2))*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.L^6*GS.sigmax^2*GS.sigmay^4*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3*sqrt((MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.sigmax^2*GS.sigmay^2)))
Sz_xxyy(t, x, y, GS ::GaussianSource) = (2*MathConstants.e^((-2*((-2*pi*x)/GS.L + GS.x0)^2)/GS.sigmax^2 - (2*((-2*pi*y)/GS.L + GS.y0)^2)/GS.sigmay^2)*pi^5*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))*(105*GS.Amp^3*(-2*pi*x + GS.L*GS.x0)^2*(-2*pi*y + GS.L*GS.y0)^2*(1 + tanh((t - GS.t0)/GS.tau))^3 + 30*GS.Amp^2*GS.L^2*GS.sigmay^2*(-2*pi*x + GS.L*GS.x0)^2*(1 + tanh((t - GS.t0)/GS.tau))^2*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))) + 30*GS.Amp^2*GS.L^2*GS.sigmax^2*(-2*pi*y + GS.L*GS.y0)^2*(1 + tanh((t - GS.t0)/GS.tau))^2*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))) - 180*GS.Amp^2*(-2*pi*x + GS.L*GS.x0)^2*(-2*pi*y + GS.L*GS.y0)^2*(1 + tanh((t - GS.t0)/GS.tau))^2*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))) - 36*GS.Amp*GS.L^2*GS.sigmay^2*(-2*pi*x + GS.L*GS.x0)^2*(1 + tanh((t - GS.t0)/GS.tau))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2 - 36*GS.Amp*GS.L^2*GS.sigmax^2*(-2*pi*y + GS.L*GS.y0)^2*(1 + tanh((t - GS.t0)/GS.tau))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2 + 84*GS.Amp*(-2*pi*x + GS.L*GS.x0)^2*(-2*pi*y + GS.L*GS.y0)^2*(1 + tanh((t - GS.t0)/GS.tau))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2 - 8*GS.L^4*GS.sigmax^2*GS.sigmay^2*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3 + 8*GS.L^2*GS.sigmay^2*(-2*pi*x + GS.L*GS.x0)^2*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3 + 8*GS.L^2*GS.sigmax^2*(-2*pi*y + GS.L*GS.y0)^2*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3 - 8*(-2*pi*x + GS.L*GS.x0)^2*(-2*pi*y + GS.L*GS.y0)^2*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3 + 12*GS.Amp*GS.L^4*(1 + tanh((t - GS.t0)/GS.tau))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^3*GS.sigmay^3 + GS.Amp*GS.sigmax*GS.sigmay*(1 + tanh((t - GS.t0)/GS.tau)))^2))/(GS.L^8*GS.sigmax^12*GS.sigmay^12*((MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.sigmax^2*GS.sigmay^2))^4.5)
Sz_yy(t, x, y, GS ::GaussianSource) = (2*pi^3*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))*(-8*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2*(4*pi^2*y^2 - 4*pi*y*GS.L*GS.y0 + GS.L^2*(-GS.sigmay^2 + GS.y0^2)) + GS.Amp*(4*pi^2*y^2 - 4*pi*y*GS.L*GS.y0 + GS.L^2*(2*GS.sigmay^2 + GS.y0^2))*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.L^4*GS.sigmay^4*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2*sqrt((MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.sigmax^2*GS.sigmay^2)))
Sz_yyy(t, x, y, GS ::GaussianSource) = (2*pi^4*GS.Amp*(2*pi*y - GS.L*GS.y0)*(1 + tanh((t - GS.t0)/GS.tau))*(64*MathConstants.e^(((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)*pi^4*GS.sigmax^4*GS.sigmay^4*(4*pi^2*y^2 - 4*pi*y*GS.L*GS.y0 + GS.L^2*(-3*GS.sigmay^2 + GS.y0^2)) + GS.Amp^2*(4*pi^2*y^2 - 4*pi*y*GS.L*GS.y0 + GS.L^2*(6*GS.sigmay^2 + GS.y0^2))*sech((t - GS.t0)/GS.tau)^2*(cosh((2*(t - GS.t0))/GS.tau) + sinh((2*(t - GS.t0))/GS.tau)) - 8*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.Amp*GS.sigmax^2*GS.sigmay^2*(20*pi^2*y^2 - 20*pi*y*GS.L*GS.y0 + GS.L^2*(3*GS.sigmay^2 + 5*GS.y0^2))*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.L^6*GS.sigmay^6*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3*sqrt((MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.sigmax^2*GS.sigmay^2)))
Sz_yyyy(t, x, y, GS ::GaussianSource) = (2*MathConstants.e^((-2*((-2*pi*x)/GS.L + GS.x0)^2)/GS.sigmax^2 - (2*((-2*pi*y)/GS.L + GS.y0)^2)/GS.sigmay^2)*pi^5*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))*(105*GS.Amp^3*((-2*pi*y)/GS.L + GS.y0)^4*(1 + tanh((t - GS.t0)/GS.tau))^3 + (180*GS.Amp^2*GS.sigmay^2*(-2*pi*y + GS.L*GS.y0)^2*(1 + tanh((t - GS.t0)/GS.tau))^2*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/GS.L^2 - (180*GS.Amp^2*(-2*pi*y + GS.L*GS.y0)^4*(1 + tanh((t - GS.t0)/GS.tau))^2*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/GS.L^4 + 36*GS.Amp*GS.sigmay^4*(1 + tanh((t - GS.t0)/GS.tau))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2 - (216*GS.Amp*GS.sigmay^2*(-2*pi*y + GS.L*GS.y0)^2*(1 + tanh((t - GS.t0)/GS.tau))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2)/GS.L^2 + (84*GS.Amp*(-2*pi*y + GS.L*GS.y0)^4*(1 + tanh((t - GS.t0)/GS.tau))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2)/GS.L^4 - 24*GS.sigmay^4*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3 + (48*GS.sigmay^2*(-2*pi*y + GS.L*GS.y0)^2*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3)/GS.L^2 - (8*(-2*pi*y + GS.L*GS.y0)^4*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3)/GS.L^4))/(GS.L^4*GS.sigmax^8*GS.sigmay^16*((MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.sigmax^2*GS.sigmay^2))^4.5)

Sz_t(t, x, y, GS ::GaussianSource) = -0.125*(MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*GS.Amp*sech((t - GS.t0)/GS.tau)^2)/(pi^2*GS.sigmax^2*GS.sigmay^2*GS.tau*(1 + (MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))/(4*pi^2*GS.sigmax^2*GS.sigmay^2))^1.5)

Sz_tx(t, x, y, GS ::GaussianSource) = (pi^2*GS.Amp*(2*pi*x - GS.L*GS.x0)*sech((t - GS.t0)/GS.tau)^2*(8*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 - GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.L^2*GS.sigmax^2*GS.tau*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2*sqrt((MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.sigmax^2*GS.sigmay^2)))

Sz_ty(t, x, y, GS ::GaussianSource) = (pi^2*GS.Amp*(2*pi*y - GS.L*GS.y0)*sech((t - GS.t0)/GS.tau)^2*(8*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 - GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.L^2*GS.sigmay^2*GS.tau*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2*sqrt((MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.sigmax^2*GS.sigmay^2)))

Sz_txx(t, x, y, GS ::GaussianSource) = -((pi^3*GS.Amp*sech((t - GS.t0)/GS.tau)^2*(64*MathConstants.e^(((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)*pi^4*GS.sigmax^4*GS.sigmay^4*(4*pi^2*x^2 - 4*pi*x*GS.L*GS.x0 + GS.L^2*(-GS.sigmax^2 + GS.x0^2)) + GS.Amp^2*(4*pi^2*x^2 - 4*pi*x*GS.L*GS.x0 + GS.L^2*(2*GS.sigmax^2 + GS.x0^2))*sech((t - GS.t0)/GS.tau)^2*(cosh((2*(t - GS.t0))/GS.tau) + sinh((2*(t - GS.t0))/GS.tau)) - 8*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.Amp*GS.sigmax^2*GS.sigmay^2*(20*pi^2*x^2 - 20*pi*x*GS.L*GS.x0 + GS.L^2*(GS.sigmax^2 + 5*GS.x0^2))*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.L^4*GS.sigmax^4*GS.tau*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3*sqrt((MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.sigmax^2*GS.sigmay^2))))
Sz_tyy(t, x, y, GS ::GaussianSource) = -((pi^3*GS.Amp*sech((t - GS.t0)/GS.tau)^2*(64*MathConstants.e^(((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)*pi^4*GS.sigmax^4*GS.sigmay^4*(4*pi^2*y^2 - 4*pi*y*GS.L*GS.y0 + GS.L^2*(-GS.sigmay^2 + GS.y0^2)) + GS.Amp^2*(4*pi^2*y^2 - 4*pi*y*GS.L*GS.y0 + GS.L^2*(2*GS.sigmay^2 + GS.y0^2))*sech((t - GS.t0)/GS.tau)^2*(cosh((2*(t - GS.t0))/GS.tau) + sinh((2*(t - GS.t0))/GS.tau)) - 8*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.Amp*GS.sigmax^2*GS.sigmay^2*(20*pi^2*y^2 - 20*pi*y*GS.L*GS.y0 + GS.L^2*(GS.sigmay^2 + 5*GS.y0^2))*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.L^4*GS.sigmay^4*GS.tau*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3*sqrt((MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.sigmax^2*GS.sigmay^2))))
Sz_txy(t, x, y, GS ::GaussianSource) = -((pi^3*GS.Amp*(2*pi*x - GS.L*GS.x0)*(2*pi*y - GS.L*GS.y0)*sech((t - GS.t0)/GS.tau)^2*(64*MathConstants.e^(((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)*pi^4*GS.sigmax^4*GS.sigmay^4 - 40*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.Amp*GS.sigmax^2*GS.sigmay^2*(1 + tanh((t - GS.t0)/GS.tau)) + GS.Amp^2*(1 + tanh((t - GS.t0)/GS.tau))^2))/(GS.L^4*GS.sigmax^2*GS.sigmay^2*GS.tau*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3*sqrt((MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.sigmax^2*GS.sigmay^2))))
Sz_tt(t, x, y, GS ::GaussianSource) = (pi*GS.Amp*sech((t - GS.t0)/GS.tau)^2*(16*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2*tanh((t - GS.t0)/GS.tau) + GS.Amp*(3*sech((t - GS.t0)/GS.tau)^2 + 4*tanh((t - GS.t0)/GS.tau)*(1 + tanh((t - GS.t0)/GS.tau)))))/(2*GS.tau^2*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2*sqrt((MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*pi^2*GS.sigmax^2*GS.sigmay^2 + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.sigmax^2*GS.sigmay^2)))



#Gaussian source type 2
Base.@kwdef mutable struct GaussianSource2{T} <: Source
	time :: T = 0.0
	Amp :: T = 0.01
	x0 :: T = 0.0
	y0 :: T = 0.0
	sigmax :: T = 0.5
	sigmay :: T = 0.5
	t0 :: T = 10.0
	L :: T = 100.0
	tau :: T = 1.0
end

Sz(t, x, y, GS ::GaussianSource2) = 1/sqrt(1 + MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))
Sz_x(t, x, y, GS ::GaussianSource2) = (MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*pi*GS.Amp*((2*pi*x)/GS.L - GS.x0)*(1 + tanh((t - GS.t0)/GS.tau)))/(GS.L*GS.sigmax^2*(1 + MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^1.5)
Sz_xx(t, x, y, GS ::GaussianSource2) = (pi^2*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))*(-2*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*(4*pi^2*x^2 - 4*pi*x*GS.L*GS.x0 + GS.L^2*(-GS.sigmax^2 + GS.x0^2)) + GS.Amp*(4*pi^2*x^2 - 4*pi*x*GS.L*GS.x0 + GS.L^2*(2*GS.sigmax^2 + GS.x0^2))*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.L^4*GS.sigmax^4*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2*sqrt(1 + MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))
Sz_xxx(t, x, y, GS ::GaussianSource2) = (pi^3*GS.Amp*(2*pi*x - GS.L*GS.x0)*(1 + tanh((t - GS.t0)/GS.tau))*(4*MathConstants.e^(((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)*(4*pi^2*x^2 - 4*pi*x*GS.L*GS.x0 + GS.L^2*(-3*GS.sigmax^2 + GS.x0^2)) + GS.Amp^2*(4*pi^2*x^2 - 4*pi*x*GS.L*GS.x0 + GS.L^2*(6*GS.sigmax^2 + GS.x0^2))*sech((t - GS.t0)/GS.tau)^2*(cosh((2*(t - GS.t0))/GS.tau) + sinh((2*(t - GS.t0))/GS.tau)) - 2*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*GS.Amp*(20*pi^2*x^2 - 20*pi*x*GS.L*GS.x0 + GS.L^2*(3*GS.sigmax^2 + 5*GS.x0^2))*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.L^6*GS.sigmax^6*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3*sqrt(1 + MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))
Sz_xxxx(t, x, y, GS ::GaussianSource2) = (MathConstants.e^((-2*((-2*pi*x)/GS.L + GS.x0)^2)/GS.sigmax^2 - (2*((-2*pi*y)/GS.L + GS.y0)^2)/GS.sigmay^2)*pi^4*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))*(105*GS.Amp^3*((-2*pi*x)/GS.L + GS.x0)^4*(1 + tanh((t - GS.t0)/GS.tau))^3 + (180*GS.Amp^2*GS.sigmax^2*(-2*pi*x + GS.L*GS.x0)^2*(1 + tanh((t - GS.t0)/GS.tau))^2*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/GS.L^2 - (180*GS.Amp^2*(-2*pi*x + GS.L*GS.x0)^4*(1 + tanh((t - GS.t0)/GS.tau))^2*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/GS.L^4 + 36*GS.Amp*GS.sigmax^4*(1 + tanh((t - GS.t0)/GS.tau))*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2 - (216*GS.Amp*GS.sigmax^2*(-2*pi*x + GS.L*GS.x0)^2*(1 + tanh((t - GS.t0)/GS.tau))*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2)/GS.L^2 + (84*GS.Amp*(-2*pi*x + GS.L*GS.x0)^4*(1 + tanh((t - GS.t0)/GS.tau))*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2)/GS.L^4 - 24*GS.sigmax^4*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3 + (48*GS.sigmax^2*(-2*pi*x + GS.L*GS.x0)^2*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3)/GS.L^2 - (8*(-2*pi*x + GS.L*GS.x0)^4*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3)/GS.L^4))/(GS.L^4*GS.sigmax^8*(1 + MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^4.5)
Sz_y(t, x, y, GS ::GaussianSource2) = (MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*pi*GS.Amp*((2*pi*y)/GS.L - GS.y0)*(1 + tanh((t - GS.t0)/GS.tau)))/(GS.L*GS.sigmay^2*(1 + MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^1.5)
Sz_xy(t, x, y, GS ::GaussianSource2) = (pi^2*GS.Amp*(2*pi*x - GS.L*GS.x0)*(2*pi*y - GS.L*GS.y0)*(1 + tanh((t - GS.t0)/GS.tau))*(-2*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.L^4*GS.sigmax^2*GS.sigmay^2*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2*sqrt(1 + MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))
Sz_xxy(t, x, y, GS ::GaussianSource2) = (pi^3*GS.Amp*(2*pi*y - GS.L*GS.y0)*(1 + tanh((t - GS.t0)/GS.tau))*(4*MathConstants.e^(((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)*(4*pi^2*x^2 - 4*pi*x*GS.L*GS.x0 + GS.L^2*(-GS.sigmax^2 + GS.x0^2)) + GS.Amp^2*(4*pi^2*x^2 - 4*pi*x*GS.L*GS.x0 + GS.L^2*(2*GS.sigmax^2 + GS.x0^2))*sech((t - GS.t0)/GS.tau)^2*(cosh((2*(t - GS.t0))/GS.tau) + sinh((2*(t - GS.t0))/GS.tau)) - 2*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*GS.Amp*(20*pi^2*x^2 - 20*pi*x*GS.L*GS.x0 + GS.L^2*(GS.sigmax^2 + 5*GS.x0^2))*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.L^6*GS.sigmax^4*GS.sigmay^2*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3*sqrt(1 + MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))
Sz_xyy(t, x, y, GS ::GaussianSource2) = (pi^3*GS.Amp*(2*pi*x - GS.L*GS.x0)*(1 + tanh((t - GS.t0)/GS.tau))*(-4*MathConstants.e^(((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)*(-4*pi^2*y^2 + 4*pi*y*GS.L*GS.y0 + GS.L^2*(GS.sigmay^2 - GS.y0^2)) + GS.Amp^2*(4*pi^2*y^2 - 4*pi*y*GS.L*GS.y0 + GS.L^2*(2*GS.sigmay^2 + GS.y0^2))*sech((t - GS.t0)/GS.tau)^2*(cosh((2*(t - GS.t0))/GS.tau) + sinh((2*(t - GS.t0))/GS.tau)) - 2*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*GS.Amp*(20*pi^2*y^2 - 20*pi*y*GS.L*GS.y0 + GS.L^2*(GS.sigmay^2 + 5*GS.y0^2))*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.L^6*GS.sigmax^2*GS.sigmay^4*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3*sqrt(1 + MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))
Sz_xxyy(t, x, y, GS ::GaussianSource2) = (MathConstants.e^((-2*((-2*pi*x)/GS.L + GS.x0)^2)/GS.sigmax^2 - (2*((-2*pi*y)/GS.L + GS.y0)^2)/GS.sigmay^2)*pi^4*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))*(105*GS.Amp^3*(-2*pi*x + GS.L*GS.x0)^2*(-2*pi*y + GS.L*GS.y0)^2*(1 + tanh((t - GS.t0)/GS.tau))^3 + 30*GS.Amp^2*GS.L^2*GS.sigmay^2*(-2*pi*x + GS.L*GS.x0)^2*(1 + tanh((t - GS.t0)/GS.tau))^2*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))) + 30*GS.Amp^2*GS.L^2*GS.sigmax^2*(-2*pi*y + GS.L*GS.y0)^2*(1 + tanh((t - GS.t0)/GS.tau))^2*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))) - 180*GS.Amp^2*(-2*pi*x + GS.L*GS.x0)^2*(-2*pi*y + GS.L*GS.y0)^2*(1 + tanh((t - GS.t0)/GS.tau))^2*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))) + 12*GS.Amp*GS.L^4*GS.sigmax^2*GS.sigmay^2*(1 + tanh((t - GS.t0)/GS.tau))*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2 - 36*GS.Amp*GS.L^2*GS.sigmay^2*(-2*pi*x + GS.L*GS.x0)^2*(1 + tanh((t - GS.t0)/GS.tau))*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2 - 36*GS.Amp*GS.L^2*GS.sigmax^2*(-2*pi*y + GS.L*GS.y0)^2*(1 + tanh((t - GS.t0)/GS.tau))*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2 + 84*GS.Amp*(-2*pi*x + GS.L*GS.x0)^2*(-2*pi*y + GS.L*GS.y0)^2*(1 + tanh((t - GS.t0)/GS.tau))*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2 - 8*GS.L^4*GS.sigmax^2*GS.sigmay^2*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3 + 8*GS.L^2*GS.sigmay^2*(-2*pi*x + GS.L*GS.x0)^2*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3 + 8*GS.L^2*GS.sigmax^2*(-2*pi*y + GS.L*GS.y0)^2*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3 - 8*(-2*pi*x + GS.L*GS.x0)^2*(-2*pi*y + GS.L*GS.y0)^2*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3))/(GS.L^8*GS.sigmax^4*GS.sigmay^4*(1 + MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^4.5)
Sz_yy(t, x, y, GS ::GaussianSource2) = (pi^2*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))*(2*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*(-4*pi^2*y^2 + 4*pi*y*GS.L*GS.y0 + GS.L^2*(GS.sigmay^2 - GS.y0^2)) + GS.Amp*(4*pi^2*y^2 - 4*pi*y*GS.L*GS.y0 + GS.L^2*(2*GS.sigmay^2 + GS.y0^2))*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.L^4*GS.sigmay^4*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2*sqrt(1 + MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))
Sz_yyy(t, x, y, GS ::GaussianSource2) = (pi^3*GS.Amp*(2*pi*y - GS.L*GS.y0)*(1 + tanh((t - GS.t0)/GS.tau))*(-4*MathConstants.e^(((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)*(-4*pi^2*y^2 + 4*pi*y*GS.L*GS.y0 + GS.L^2*(3*GS.sigmay^2 - GS.y0^2)) + GS.Amp^2*(4*pi^2*y^2 - 4*pi*y*GS.L*GS.y0 + GS.L^2*(6*GS.sigmay^2 + GS.y0^2))*sech((t - GS.t0)/GS.tau)^2*(cosh((2*(t - GS.t0))/GS.tau) + sinh((2*(t - GS.t0))/GS.tau)) - 2*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*GS.Amp*(20*pi^2*y^2 - 20*pi*y*GS.L*GS.y0 + GS.L^2*(3*GS.sigmay^2 + 5*GS.y0^2))*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.L^6*GS.sigmay^6*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3*sqrt(1 + MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))
Sz_yyyy(t, x, y, GS ::GaussianSource2) = (MathConstants.e^((-2*((-2*pi*x)/GS.L + GS.x0)^2)/GS.sigmax^2 - (2*((-2*pi*y)/GS.L + GS.y0)^2)/GS.sigmay^2)*pi^4*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))*(105*GS.Amp^3*((-2*pi*y)/GS.L + GS.y0)^4*(1 + tanh((t - GS.t0)/GS.tau))^3 + (180*GS.Amp^2*GS.sigmay^2*(-2*pi*y + GS.L*GS.y0)^2*(1 + tanh((t - GS.t0)/GS.tau))^2*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/GS.L^2 - (180*GS.Amp^2*(-2*pi*y + GS.L*GS.y0)^4*(1 + tanh((t - GS.t0)/GS.tau))^2*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/GS.L^4 + 36*GS.Amp*GS.sigmay^4*(1 + tanh((t - GS.t0)/GS.tau))*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2 - (216*GS.Amp*GS.sigmay^2*(-2*pi*y + GS.L*GS.y0)^2*(1 + tanh((t - GS.t0)/GS.tau))*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2)/GS.L^2 + (84*GS.Amp*(-2*pi*y + GS.L*GS.y0)^4*(1 + tanh((t - GS.t0)/GS.tau))*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2)/GS.L^4 - 24*GS.sigmay^4*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3 + (48*GS.sigmay^2*(-2*pi*y + GS.L*GS.y0)^2*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3)/GS.L^2 - (8*(-2*pi*y + GS.L*GS.y0)^4*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3)/GS.L^4))/(GS.L^4*GS.sigmay^8*(1 + MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^4.5)
Sz_t(t, x, y, GS ::GaussianSource2) = -0.5*(MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*GS.Amp*sech((t - GS.t0)/GS.tau)^2)/(GS.tau*(1 + MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^1.5)
Sz_tt(t, x, y, GS ::GaussianSource2) = (GS.Amp*sech((t - GS.t0)/GS.tau)^2*(4*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*tanh((t - GS.t0)/GS.tau) + GS.Amp*(3*sech((t - GS.t0)/GS.tau)^2 + 4*tanh((t - GS.t0)/GS.tau)*(1 + tanh((t - GS.t0)/GS.tau)))))/(4*GS.tau^2*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2*sqrt(1 + MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))
Sz_tx(t, x, y, GS ::GaussianSource2) = -0.5*(pi*GS.Amp*(2*pi*x - GS.L*GS.x0)*sech((t - GS.t0)/GS.tau)^2*(-2*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.L^2*GS.sigmax^2*GS.tau*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2*sqrt(1 + MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))
Sz_ty(t, x, y, GS ::GaussianSource2) = -0.5*(pi*GS.Amp*(2*pi*y - GS.L*GS.y0)*sech((t - GS.t0)/GS.tau)^2*(-2*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.L^2*GS.sigmay^2*GS.tau*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^2*sqrt(1 + MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))
Sz_txx(t, x, y, GS ::GaussianSource2) = -0.5*(pi^2*GS.Amp*sech((t - GS.t0)/GS.tau)^2*(4*MathConstants.e^(((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)*(4*pi^2*x^2 - 4*pi*x*GS.L*GS.x0 + GS.L^2*(-GS.sigmax^2 + GS.x0^2)) + GS.Amp^2*(4*pi^2*x^2 - 4*pi*x*GS.L*GS.x0 + GS.L^2*(2*GS.sigmax^2 + GS.x0^2))*sech((t - GS.t0)/GS.tau)^2*(cosh((2*(t - GS.t0))/GS.tau) + sinh((2*(t - GS.t0))/GS.tau)) - 2*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*GS.Amp*(20*pi^2*x^2 - 20*pi*x*GS.L*GS.x0 + GS.L^2*(GS.sigmax^2 + 5*GS.x0^2))*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.L^4*GS.sigmax^4*GS.tau*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3*sqrt(1 + MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))
Sz_tyy(t, x, y, GS ::GaussianSource2) = -0.5*(pi^2*GS.Amp*sech((t - GS.t0)/GS.tau)^2*(-4*MathConstants.e^(((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)*(-4*pi^2*y^2 + 4*pi*y*GS.L*GS.y0 + GS.L^2*(GS.sigmay^2 - GS.y0^2)) + GS.Amp^2*(4*pi^2*y^2 - 4*pi*y*GS.L*GS.y0 + GS.L^2*(2*GS.sigmay^2 + GS.y0^2))*sech((t - GS.t0)/GS.tau)^2*(cosh((2*(t - GS.t0))/GS.tau) + sinh((2*(t - GS.t0))/GS.tau)) - 2*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*GS.Amp*(20*pi^2*y^2 - 20*pi*y*GS.L*GS.y0 + GS.L^2*(GS.sigmay^2 + 5*GS.y0^2))*(1 + tanh((t - GS.t0)/GS.tau))))/(GS.L^4*GS.sigmay^4*GS.tau*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3*sqrt(1 + MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))
Sz_txy(t, x, y, GS ::GaussianSource2) = -0.5*(pi^2*GS.Amp*(2*pi*x - GS.L*GS.x0)*(2*pi*y - GS.L*GS.y0)*sech((t - GS.t0)/GS.tau)^2*(4*MathConstants.e^(((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2) - 10*MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2)*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)) + GS.Amp^2*(1 + tanh((t - GS.t0)/GS.tau))^2))/(GS.L^4*GS.sigmax^2*GS.sigmay^2*GS.tau*(MathConstants.e^((((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 + ((-2*pi*y)/GS.L + GS.y0)^2/GS.sigmay^2)/2) + GS.Amp*(1 + tanh((t - GS.t0)/GS.tau)))^3*sqrt(1 + MathConstants.e^(-0.5*((-2*pi*x)/GS.L + GS.x0)^2/GS.sigmax^2 - ((-2*pi*y)/GS.L + GS.y0)^2/(2*GS.sigmay^2))*GS.Amp*(1 + tanh((t - GS.t0)/GS.tau))))

@inline getSourcetime(ff::Source) = ff.time


